apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    description: Defines how to deploy the database
  name: mongodb
spec:
  replicas: 1
  selector:
    name: mongodb
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: mongodb
      name: mongodb
    spec:
      # use an init container to 
      # create a certificate in pem format 
      # before starting mongodb  
      initContainers:
      - name: create-mongodb-pem
        image: busybox:1.28
        command: ['sh', '-c', '-e', 'cat /etc/mongodb/tls/tls.key /etc/mongodb/tls/tls.crt > /etc/mongodb/pem/mongodb.pem']
        volumeMounts: 
        - mountPath: /etc/mongodb/tls
          name: mongodb-tls
        - mountPath: /etc/mongodb/pem
          name: mongodb-pem
      containers:
      - env:
        - name: MONGODB_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: nodejs
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: nodejs
        - name: MONGODB_DATABASE
          value: sampledb
        - name: MONGODB_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-admin-password
              name: nodejs
        image: ' '
        livenessProbe:
          initialDelaySeconds: 30
          tcpSocket:
            port: 27017
          timeoutSeconds: 1
        name: mongodb
        ports:
        - containerPort: 27017
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - mongo --ssl --sslCAFile /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt 
                --sslAllowInvalidHostnames --host=localhost:27017 
                -u $MONGODB_USER -p $MONGODB_PASSWORD $MONGODB_DATABASE 
                --eval="quit()"
          initialDelaySeconds: 3
          timeoutSeconds: 1
        resources:
          limits:
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/mongodb/data
          name: mongodb-data
        - mountPath: /usr/share/container-scripts/mongodb/pre-init/30-set-config-file.sh
          name: mongodb-config
          subPath: 30-set-config-file.sh
        - mountPath: /etc/mongod.conf
          name: mongodb-config
          subPath: mongod.conf
        - mountPath: /etc/mongodb/tls
          name: mongodb-tls
        - mountPath: /etc/mongodb/pem
          name: mongodb-pem
      volumes:
      - name: mongodb-tls
        secret:
          defaultMode: 420
          secretName: mongodb-tls 
      - name: mongodb-pem
        emptyDir: {} 
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongodb
      - name: mongodb-config
        configMap:
          name: mongodb-configmap
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - mongodb
      from:
        kind: ImageStreamTag
        name: mongodb:3.4
        namespace: openshift
    type: ImageChange
  - type: ConfigChange
